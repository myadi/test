package recruit;

import java.awt.event.*;
import java.awt.GridBagLayout;
import java.awt.BorderLayout;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import java.sql.SQLException;
import javax.swing.JPasswordField;
import java.util.Arrays;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JTextField;


public class ActionAdapter implements ActionListener
{
	public RegisterForm registerForm=null;
	public LoginForm loginForm=null;
	public JDBCManager jdbc=null;
	public UploadForm upload=null;
	JFrame frame = new JFrame();
	public String uname1,action;
	String pass;
	public RegisterDB regDB = null;
	public RuleForm ruleForm = null;
	AccountRecord record = null;
	ReadTextFile readFile = null;

	public ActionAdapter(LoginForm loginForm,RegisterForm registerForm,JDBCManager jdbc,UploadForm upload,RuleForm ruleForm)throws Exception
	{
		this.registerForm = registerForm;
		this.loginForm = loginForm;
		this.jdbc = jdbc;
		this.upload = upload;
		this.ruleForm = ruleForm;
		record = new AccountRecord();
		readFile = new ReadTextFile(upload);
		regDB = new RegisterDB(registerForm,jdbc);
		registerForm.dispose();
	}

	public void actionPerformed(ActionEvent e)
	{
		uname1=loginForm.uname.getText();

		System.out.println("successfully invoked ruleForm");
		char [] input=loginForm.pass.getPassword();
		pass = String.valueOf(input);
		action = e.getActionCommand();
		if(action == "resetlogin")
		{
			loginForm.uname.setText("");
			loginForm.pass.setText("");
		}
		if(action == "register")
		{
			loginForm.dispose();
			registerForm.show();
		}

		if(action == "Reset")
		{
			registerForm.uname.setText("");
			registerForm.pass.setText("");
			registerForm.name.setText("");
			registerForm.phone.setText("");
			registerForm.email.setText("");
		}
		if(action == "Back")
		{
			registerForm.dispose();
			loginForm.show();
		}

		if(action == "login")
		{
			try
			{
				loginCheck();
			}
			catch(SQLException e1)
			{
				e1.printStackTrace();
			}
		}

		if(action == "RegisterForm")
		{
			try
			{
				insertUserDB();
			}
			catch(SQLException e2)
			{
				e2.printStackTrace();
			}
		}

		if(action == "resumerule")
		{
			ruleForm.show();
			Align.set(ruleForm,800,800);
			upload.dispose();
			loginForm.dispose();
			registerForm.dispose();
		}

		if(action == "backUpload")
		{
			upload.show();
			if(ruleForm != null)
			{
				ruleForm.dispose();
			}
			loginForm.dispose();
			registerForm.dispose();
		}

		if(action == "browse")
		{
			Chooser frame = new Chooser();
			upload.uploadField.setText(frame.fileName);
		}

		if(action == "resumeupload")
		{
			try
			{
			resumeCheck();
			}
			catch(SQLException e3)
			{
			e3.printStackTrace();
			}
		}
	}

	public void insertUserDB()throws SQLException
	{
		int check=0;

		check = regDB.DBInsert();

		if(check==1)
		{
			registerForm.dispose();
			loginForm.show();
		}
	}
	public void loginCheck()throws SQLException
	{
		jdbc.resultSet = jdbc.statement.executeQuery("select id,pass from auth");
			int count=0;
			String unamedb;
			String passdb;

			while(jdbc.resultSet.next())
			{
				unamedb=jdbc.resultSet.getObject(1).toString();
				passdb=jdbc.resultSet.getObject(2).toString();
				if(uname1.equals(unamedb))
				{
					if(pass.equals(passdb))
					{

					count++;
					break;
					}
				}
			}
			if(count==0)
				{
					loginForm.show();
					registerForm.dispose();
				}
			if(count==1)
			{
				upload.show();
				Align.set(upload,300,300);
				upload.checkSelect();
				loginForm.dispose();
				registerForm.dispose();
			}
	}

	public void resumeCheck()throws SQLException
	{
		jdbc.resultSet = jdbc.statement.executeQuery("select * from selected ");

		int confirm;
		int selected=0;
		int resume=0;
		String unamedb;
		while(jdbc.resultSet.next())
		{
			unamedb=jdbc.resultSet.getObject(1).toString();

			if(uname1.equals(unamedb))
			{
				selected=1;
				confirm = JOptionPane.showConfirmDialog(new JFrame(),"Your have been selected! you cannot opt for other jobs you can only update minor details! Do you wish to Continue?");
				
				if(confirm == JOptionPane.YES_OPTION)
				{
					updateResumeSelected();
				}

				else if(confirm == JOptionPane.NO_OPTION)
				{
					upload.uploadField.setText("");
				}
			
				else
				{
				}
			}
		}
	
		if(selected==0)
		{
		jdbc.resultSet = jdbc.statement.executeQuery("select * from resume");
		
		while(jdbc.resultSet.next())
		{
			unamedb=jdbc.resultSet.getObject(1).toString();
			
			if(uname1.equals(unamedb))
				resume=1;
		}
		}

		if(resume==0)
		{
			if(upload.uploadField.getText().equals(""))
			{
				JOptionPane.showMessageDialog(new JFrame(),"Please enter your resume's path!");
				return;
			}
			
			else
			{
				readFile.openFile();
				record = readFile.readRecords();
				readFile.closeFile();
				writeResume();
				upload.checkSelect();
			}
		}
	}

	public void updateResumeSelected()
	{
		
	}

 
	public void writeResume()throws SQLException
	{
		String insertQuery;
		readFile.openFile();
		record = readFile.readRecords();
		readFile.closeFile();
		insertQuery = "insert into resume values('"+record.getUsername()+"','"+record.getName()+"','"+record.getDOB()+"','"+record.getSex()+"','"+record.getAddr()+"','"+record.getQualification()+"','"+record.getExpProf()+"',"+record.getExpYear()+",'"+record.getApply()+"')";	

		int count = jdbc.statement.executeUpdate(insertQuery);
		
		if(count==1)
		{
			JOptionPane.showMessageDialog(new JFrame(),"Successfully uploaded!");
			selectCandid();
			
		}
	}

	public void selectCandid()throws SQLException
	{
		String selectResume = "select * from resume where uname='"+uname1+"';";
		String qualification = "";
		int experience = 0;
		String applyFor = "";
		String reduceVacancy = "";
		String vacancyNumber = "";
		int vacancyNum = 0;
		int selectInfo=0; 
		int vacancyInfo=0;

		jdbc.resultSet = jdbc.statement.executeQuery(selectResume);

		while(jdbc.resultSet.next())
		{
			qualification = jdbc.resultSet.getObject(6).toString();
			experience = Integer.parseInt(jdbc.resultSet.getObject(8).toString());
			applyFor = jdbc.resultSet.getObject(9).toString();
		}

		if(applyFor.equals("principal"))
		{
			if((qualification.equals("phd") || qualification.equals("mtech")) && experience>2)
			{
				String selectedInsert;
				selectedInsert = "insert into selected values('"+uname1+"','principal');";
				
				selectInfo = jdbc.statement.executeUpdate(selectedInsert);

				vacancyNumber = "select * from vacancy where post='"+applyFor+"';";

				jdbc.resultSet = jdbc.statement.executeQuery(vacancyNumber);

				while(jdbc.resultSet.next())
				{
					vacancyNum=Integer.parseInt(jdbc.resultSet.getObject(2).toString());
				}
				if(vacancyNum==0)
				{
					JOptionPane.showMessageDialog(new JFrame(),"There is no post vacant for the post you opt!");
				}

				else
				{
				vacancyNum-=1;
				
				reduceVacancy = "update vacancy set no="+vacancyNum+" where post='principal'";

				vacancyInfo = jdbc.statement.executeUpdate(reduceVacancy);
				}
			}
		}
		else if((applyFor.equals("staff")))
		{
			if((qualification.equals("mtech")) && experience>2)
			{
				String selectedInsert;
				selectedInsert = "insert into selected values('"+uname1+"','staff');";
				
				selectInfo = jdbc.statement.executeUpdate(selectedInsert);

				vacancyNumber = "select * from vacancy where post='"+applyFor+"';";

				jdbc.resultSet = jdbc.statement.executeQuery(vacancyNumber);

				while(jdbc.resultSet.next())
				{
					vacancyNum=Integer.parseInt(jdbc.resultSet.getObject(2).toString());
				}
				if(vacancyNum==0)
				{
					JOptionPane.showMessageDialog(new JFrame(),"There is no post vacant for the post you opt!");
				}

				else
				{
				vacancyNum-=1;
				
				reduceVacancy = "update vacancy set no="+vacancyNum+" where post='staff'";

				vacancyInfo = jdbc.statement.executeUpdate(reduceVacancy);
				}
			}
		}
		
		else if((applyFor.equals("hod")) )
		{
			if((qualification.equals("mtech")) && experience>2)
			{
				String selectedInsert;
				selectedInsert = "insert into selected values('"+uname1+"','hod');";
				
				selectInfo = jdbc.statement.executeUpdate(selectedInsert);

				vacancyNumber = "select * from vacancy where post='"+applyFor+"';";

				jdbc.resultSet = jdbc.statement.executeQuery(vacancyNumber);

				while(jdbc.resultSet.next())
				{
					vacancyNum=Integer.parseInt(jdbc.resultSet.getObject(2).toString());
				}
				if(vacancyNum==0)
				{
					JOptionPane.showMessageDialog(new JFrame(),"There is no post vacant for the post you opt!");
				}

				else
				{
				vacancyNum-=1;
				
				reduceVacancy = "update vacancy set no="+vacancyNum+" where post='hod'";

				vacancyInfo = jdbc.statement.executeUpdate(reduceVacancy);
				}
			}
		}

		else if((applyFor.equals("peon")))
		{
			if((qualification.equals("tenth")) && experience>0)
			{
				String selectedInsert;
				selectedInsert = "insert into selected values('"+uname1+"','peon');";
				
				selectInfo = jdbc.statement.executeUpdate(selectedInsert);

				vacancyNumber = "select * from vacancy where post='"+applyFor+"';";

				jdbc.resultSet = jdbc.statement.executeQuery(vacancyNumber);

				while(jdbc.resultSet.next())
				{
					vacancyNum=Integer.parseInt(jdbc.resultSet.getObject(2).toString());
				}
				if(vacancyNum==0)
				{
					JOptionPane.showMessageDialog(new JFrame(),"There is no post vacant for the post you opt!");
				}

				else
				{
				vacancyNum-=1;
				
				reduceVacancy = "update vacancy set no="+vacancyNum+" where post='peon'";

				vacancyInfo = jdbc.statement.executeUpdate(reduceVacancy);
				}
			}
		}

		else
		{
			JOptionPane.showMessageDialog(new JFrame()," There is no such post in this organization you applied for!");
		}

		if(selectInfo==1 && vacancyInfo==1)
			JOptionPane.showMessageDialog(new JFrame(),"Congratulations! You have been selected for "+applyFor+" post.");
	}
}

class Chooser extends JFrame 
{

	JFileChooser chooser;
	public String fileName;

	public Chooser()
	{
		chooser = new JFileChooser();
		int r = chooser.showOpenDialog(new JFrame());
		if (r == JFileChooser.APPROVE_OPTION) 
		{
		fileName = chooser.getSelectedFile().getPath();
		}
	}
}
